# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

# Periodic auto-update on Zsh startup: 'ask' or 'no'.
# You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update      'no'
# Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' auto-update-days '28'

# Keyboard type: 'mac' or 'pc'.
{{- if eq .chezmoi.os "darwin" }}
zstyle ':z4h:bindkey' keyboard  'mac'
{{- else }}
zstyle ':z4h:bindkey' keyboard  'pc'
{{- end }}

# Don't start tmux.
zstyle ':z4h:' start-tmux       no

# Mark up shell's output with semantic information.
zstyle ':z4h:' term-shell-integration 'yes'

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete' recurse-dirs 'yes'

# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'no'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return
z4h install jkavan/terragrunt-oh-my-zsh-plugin || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Extend PATH.
path=(~/.local/bin ~/bin $path)

# Export environment variables.
export GPG_TTY=$TTY
export EDITOR=nano

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
# z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
# z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin
z4h load ohmyzsh/ohmyzsh/plugins/asdf
z4h load jkavan/terragrunt-oh-my-zsh-plugin

# Define key bindings.
{{- if ne .chezmoi.os "darwin" }}
z4h bindkey z4h-backward-kill-word  Ctrl+Backspace     Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace
{{- end }}
z4h bindkey undo Ctrl+/ Shift+Tab  # undo the last command line change
{{- if eq .chezmoi.os "darwin" }}
z4h bindkey redo Option+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory
{{- else }}
z4h bindkey redo Alt+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Alt+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Alt+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Alt+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Alt+Down   # cd into a child directory
{{- end }}

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

command -v chezmoi >/dev/null && eval "$(chezmoi completion zsh)"; compdef _chezmoi chezmoi

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'
alias rm='rm -iv'
alias mv='mv -iv'
alias cp='cp -iv'
alias mkdir='mkdir -pv'

alias find='noglob find'
alias fc='noglob fc'
alias history='noglob history'
alias locate='noglob locate'
alias pip='noglob pip'
alias fd='noglob fd'
alias rg='noglob rg'

if (( $+commands[htop] )); then alias top='htop'; fi
alias exa='exa -laFh --git'
alias k='kubectl'
alias h='helm'
alias kx='kubectx'
alias kn='kubens'
alias tf='terraform'
alias tg='terragrunt'

# Add flags to existing aliases.
{{- if eq .chezmoi.os "darwin" }}
alias ls="gls -G --group-directories-first --color=auto"
{{- else }}
alias ls="${aliases[ls]:-ls} --group-directories-first --color=auto"
{{- end }}
alias ll="${aliases[ls]:-ls} -lh"
alias la="${aliases[ll]:-ls} -A"
alias l="${aliases[ls]:-ls} -1A"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt no_auto_menu  # require an extra TAB press to open the completion menu

if [ -d "$HOME/.asdf/plugins/direnv" ]; then
  if [ -s "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc" ]; then
    z4h source "${XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc"
  else
    asdf direnv setup --shell zsh --version latest
  fi
fi

{{- if or .work (eq .chezmoi.os "darwin") }}
if [ -f "$HOME/yandex-cloud/path.bash.inc" ]; then z4h source "$HOME/yandex-cloud/path.bash.inc"; fi
if [ -f "$HOME/yandex-cloud/completion.zsh.inc" ]; then z4h source "$HOME/yandex-cloud/completion.zsh.inc"; fi
{{- end }}

{{- if eq .chezmoi.os "darwin" }}
export PATH="$(brew --prefix)/opt/python/libexec/bin:$PATH"
{{- end }}

. "$HOME/.atuin/bin/env"
if command -v atuin >/dev/null 2>&1; then
  eval "$(atuin init zsh)"
fi
